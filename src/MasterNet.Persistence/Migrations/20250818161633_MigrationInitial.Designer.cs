// <auto-generated />
using System;
using MasterNet.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MasterNet.Persistence.Migrations
{
    [DbContext(typeof(MasterNetDbContext))]
    [Migration("20250818161633_MigrationInitial")]
    partial class MigrationInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.19");

            modelBuilder.Entity("MasterNet.Domain.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataPublicacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("cursos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0db141f4-4ab4-49c2-a5c5-062d7af11749"),
                            DataPublicacao = new DateTime(2025, 8, 18, 16, 16, 32, 775, DateTimeKind.Utc).AddTicks(7007),
                            Descricao = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            Titulo = "Unbranded Cotton Tuna"
                        },
                        new
                        {
                            Id = new Guid("84e3ab0e-8ffa-459f-b9f5-d739851b821d"),
                            DataPublicacao = new DateTime(2025, 8, 18, 16, 16, 32, 775, DateTimeKind.Utc).AddTicks(7025),
                            Descricao = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            Titulo = "Small Cotton Salad"
                        },
                        new
                        {
                            Id = new Guid("7245da36-cd04-4ea9-8cb2-a8f69b709837"),
                            DataPublicacao = new DateTime(2025, 8, 18, 16, 16, 32, 775, DateTimeKind.Utc).AddTicks(7034),
                            Descricao = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            Titulo = "Tasty Rubber Computer"
                        },
                        new
                        {
                            Id = new Guid("2e214b2a-53bd-4b0d-b2a8-af7c7749bced"),
                            DataPublicacao = new DateTime(2025, 8, 18, 16, 16, 32, 775, DateTimeKind.Utc).AddTicks(7042),
                            Descricao = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            Titulo = "Rustic Fresh Chips"
                        },
                        new
                        {
                            Id = new Guid("6375ecf7-288b-48d2-91c6-17d2a8758763"),
                            DataPublicacao = new DateTime(2025, 8, 18, 16, 16, 32, 775, DateTimeKind.Utc).AddTicks(7051),
                            Descricao = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            Titulo = "Rustic Metal Keyboard"
                        },
                        new
                        {
                            Id = new Guid("c337ec9c-bb26-45f6-b24c-910e3d16083e"),
                            DataPublicacao = new DateTime(2025, 8, 18, 16, 16, 32, 775, DateTimeKind.Utc).AddTicks(7060),
                            Descricao = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            Titulo = "Rustic Wooden Soap"
                        },
                        new
                        {
                            Id = new Guid("4df7f581-08b2-400a-9fd7-7e9e89e15f97"),
                            DataPublicacao = new DateTime(2025, 8, 18, 16, 16, 32, 775, DateTimeKind.Utc).AddTicks(7075),
                            Descricao = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            Titulo = "Generic Fresh Tuna"
                        },
                        new
                        {
                            Id = new Guid("4336fa2f-881f-4cd6-9978-20de51391c24"),
                            DataPublicacao = new DateTime(2025, 8, 18, 16, 16, 32, 775, DateTimeKind.Utc).AddTicks(7083),
                            Descricao = "The Football Is Good For Training And Recreational Purposes",
                            Titulo = "Unbranded Plastic Cheese"
                        },
                        new
                        {
                            Id = new Guid("53fbabc1-ed61-4254-a4ca-088081591b14"),
                            DataPublicacao = new DateTime(2025, 8, 18, 16, 16, 32, 775, DateTimeKind.Utc).AddTicks(7091),
                            Descricao = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            Titulo = "Unbranded Frozen Table"
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.CursoInstrutor", b =>
                {
                    b.Property<Guid?>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IntrutorId")
                        .HasColumnType("TEXT");

                    b.HasKey("CursoId", "IntrutorId");

                    b.HasIndex("IntrutorId");

                    b.ToTable("curso_instrutores", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.CursoPreco", b =>
                {
                    b.Property<Guid?>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PrecoId")
                        .HasColumnType("TEXT");

                    b.HasKey("CursoId", "PrecoId");

                    b.HasIndex("PrecoId");

                    b.ToTable("curso_precos", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Foto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CursoId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("imagens", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Instrutor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("GrauAcademico")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("instrutores", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8b1dc99a-1b2b-4140-a7c8-e412a9584f7f"),
                            GrauAcademico = "National Identity Assistant",
                            Nome = "Margot Nader",
                            Sobrenome = "Paucek"
                        },
                        new
                        {
                            Id = new Guid("b554bd34-1248-4487-a245-cb6c959b4416"),
                            GrauAcademico = "Global Division Assistant",
                            Nome = "Sage West",
                            Sobrenome = "Hilpert"
                        },
                        new
                        {
                            Id = new Guid("3cce326d-ccb9-45ad-a03d-20d4f81b99a0"),
                            GrauAcademico = "Dynamic Accountability Developer",
                            Nome = "Adolphus Dooley",
                            Sobrenome = "Larkin"
                        },
                        new
                        {
                            Id = new Guid("b954de9d-b002-402f-9a74-a10a58d603f8"),
                            GrauAcademico = "District Data Assistant",
                            Nome = "Laverna Rath",
                            Sobrenome = "Kohler"
                        },
                        new
                        {
                            Id = new Guid("82ca525a-b114-4f1a-a7b5-57020eef0812"),
                            GrauAcademico = "Human Infrastructure Designer",
                            Nome = "Markus Bruen",
                            Sobrenome = "Witting"
                        },
                        new
                        {
                            Id = new Guid("e08567f2-d347-483d-8ce4-fc094e344573"),
                            GrauAcademico = "Dynamic Group Representative",
                            Nome = "Audreanne Volkman",
                            Sobrenome = "Kovacek"
                        },
                        new
                        {
                            Id = new Guid("9250454c-2abc-470b-a946-c3b7f2a30ee2"),
                            GrauAcademico = "Dynamic Interactions Consultant",
                            Nome = "Vinnie Rodriguez",
                            Sobrenome = "Rempel"
                        },
                        new
                        {
                            Id = new Guid("0f5fd279-a62d-40ec-9f3f-2c1e238be30d"),
                            GrauAcademico = "International Research Specialist",
                            Nome = "Brando Carter",
                            Sobrenome = "Stracke"
                        },
                        new
                        {
                            Id = new Guid("e496b157-33ee-438a-8970-3855509e82db"),
                            GrauAcademico = "Direct Paradigm Officer",
                            Nome = "Alexandria Runolfsson",
                            Sobrenome = "Marquardt"
                        },
                        new
                        {
                            Id = new Guid("d973b9e1-7f4e-446c-b35b-5161265692d6"),
                            GrauAcademico = "Lead Group Engineer",
                            Nome = "Evert Ankunding",
                            Sobrenome = "Gutkowski"
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.Preco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<decimal>("PrecoAtual")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecoPromocional")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("precos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c2a8add-1cc4-48c5-b346-a500de025570"),
                            Nome = "Preco Padrao",
                            PrecoAtual = 10.0m,
                            PrecoPromocional = 8.0m
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.Qualificacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Aluno")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comentario")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Ponto")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("qualificacoes", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.CursoInstrutor", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("CursosInstrutores")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterNet.Domain.Instrutor", "Instrutor")
                        .WithMany("CursosInstrutores")
                        .HasForeignKey("IntrutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Instrutor");
                });

            modelBuilder.Entity("MasterNet.Domain.CursoPreco", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("CursosPrecos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterNet.Domain.Preco", "Preco")
                        .WithMany("CursosPrecos")
                        .HasForeignKey("PrecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Preco");
                });

            modelBuilder.Entity("MasterNet.Domain.Foto", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("Fotos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("MasterNet.Domain.Qualificacao", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("Qualificacao")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("MasterNet.Domain.Curso", b =>
                {
                    b.Navigation("CursosInstrutores");

                    b.Navigation("CursosPrecos");

                    b.Navigation("Fotos");

                    b.Navigation("Qualificacao");
                });

            modelBuilder.Entity("MasterNet.Domain.Instrutor", b =>
                {
                    b.Navigation("CursosInstrutores");
                });

            modelBuilder.Entity("MasterNet.Domain.Preco", b =>
                {
                    b.Navigation("CursosPrecos");
                });
#pragma warning restore 612, 618
        }
    }
}
