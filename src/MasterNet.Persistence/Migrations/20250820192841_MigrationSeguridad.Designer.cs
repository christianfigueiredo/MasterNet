// <auto-generated />
using System;
using MasterNet.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MasterNet.Persistence.Migrations
{
    [DbContext(typeof(MasterNetDbContext))]
    [Migration("20250820192841_MigrationSeguridad")]
    partial class MigrationSeguridad
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.19");

            modelBuilder.Entity("MasterNet.Domain.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataPublicacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("cursos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2b606231-d9f3-4bcd-b9fb-dd1dc8441044"),
                            DataPublicacao = new DateTime(2025, 8, 20, 19, 28, 41, 232, DateTimeKind.Utc).AddTicks(3853),
                            Descricao = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            Titulo = "Tasty Fresh Salad"
                        },
                        new
                        {
                            Id = new Guid("65132b3a-7d3c-4917-ace7-ac7906dca572"),
                            DataPublicacao = new DateTime(2025, 8, 20, 19, 28, 41, 232, DateTimeKind.Utc).AddTicks(3888),
                            Descricao = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            Titulo = "Fantastic Fresh Mouse"
                        },
                        new
                        {
                            Id = new Guid("8ed4d03d-1453-4ee5-8534-9c68b9fc98c3"),
                            DataPublicacao = new DateTime(2025, 8, 20, 19, 28, 41, 232, DateTimeKind.Utc).AddTicks(3901),
                            Descricao = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            Titulo = "Intelligent Metal Computer"
                        },
                        new
                        {
                            Id = new Guid("588ac2a9-e2c0-4730-829e-14ea4ed39425"),
                            DataPublicacao = new DateTime(2025, 8, 20, 19, 28, 41, 232, DateTimeKind.Utc).AddTicks(3911),
                            Descricao = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            Titulo = "Gorgeous Wooden Chair"
                        },
                        new
                        {
                            Id = new Guid("34921daf-5ca7-4f2d-ae35-68f32b6b23ca"),
                            DataPublicacao = new DateTime(2025, 8, 20, 19, 28, 41, 232, DateTimeKind.Utc).AddTicks(3928),
                            Descricao = "The Football Is Good For Training And Recreational Purposes",
                            Titulo = "Unbranded Concrete Bike"
                        },
                        new
                        {
                            Id = new Guid("806456c6-61d0-4819-a189-0a5fb775e56a"),
                            DataPublicacao = new DateTime(2025, 8, 20, 19, 28, 41, 232, DateTimeKind.Utc).AddTicks(3939),
                            Descricao = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            Titulo = "Incredible Metal Computer"
                        },
                        new
                        {
                            Id = new Guid("b4e122b0-9a5d-4330-8a58-5f5677197bfa"),
                            DataPublicacao = new DateTime(2025, 8, 20, 19, 28, 41, 232, DateTimeKind.Utc).AddTicks(3949),
                            Descricao = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            Titulo = "Awesome Wooden Cheese"
                        },
                        new
                        {
                            Id = new Guid("e8323f20-3738-491f-b69b-4734b749f82f"),
                            DataPublicacao = new DateTime(2025, 8, 20, 19, 28, 41, 232, DateTimeKind.Utc).AddTicks(3958),
                            Descricao = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            Titulo = "Awesome Frozen Fish"
                        },
                        new
                        {
                            Id = new Guid("cc50adfc-e274-407f-bdd9-90c0e1ca8f98"),
                            DataPublicacao = new DateTime(2025, 8, 20, 19, 28, 41, 232, DateTimeKind.Utc).AddTicks(3968),
                            Descricao = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            Titulo = "Licensed Steel Mouse"
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.CursoInstrutor", b =>
                {
                    b.Property<Guid?>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IntrutorId")
                        .HasColumnType("TEXT");

                    b.HasKey("CursoId", "IntrutorId");

                    b.HasIndex("IntrutorId");

                    b.ToTable("curso_instrutores", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.CursoPreco", b =>
                {
                    b.Property<Guid?>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PrecoId")
                        .HasColumnType("TEXT");

                    b.HasKey("CursoId", "PrecoId");

                    b.HasIndex("PrecoId");

                    b.ToTable("curso_precos", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Foto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CursoId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("imagens", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Instrutor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("GrauAcademico")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("instrutores", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3c2871d6-c279-4741-ab93-b2981a6043d4"),
                            GrauAcademico = "Internal Identity Strategist",
                            Nome = "Jared Nienow",
                            Sobrenome = "Sauer"
                        },
                        new
                        {
                            Id = new Guid("f1b4af2c-4e87-4a85-bb65-643d1960f0a7"),
                            GrauAcademico = "District Implementation Producer",
                            Nome = "Candelario Reichert",
                            Sobrenome = "Cole"
                        },
                        new
                        {
                            Id = new Guid("a5ee2e97-50c0-49a0-8cbe-623b5fbb7de9"),
                            GrauAcademico = "Product Marketing Supervisor",
                            Nome = "Annie Muller",
                            Sobrenome = "Walter"
                        },
                        new
                        {
                            Id = new Guid("812d496a-bebf-419d-9fa4-537624ef516f"),
                            GrauAcademico = "International Paradigm Supervisor",
                            Nome = "Lilian Ryan",
                            Sobrenome = "Schuster"
                        },
                        new
                        {
                            Id = new Guid("c584228e-91b6-4bc2-8b55-d9bbe32336a3"),
                            GrauAcademico = "Legacy Solutions Producer",
                            Nome = "Kristina Kozey",
                            Sobrenome = "Marvin"
                        },
                        new
                        {
                            Id = new Guid("3ef44bf6-476e-47e6-b6f6-c1ee0352e8bd"),
                            GrauAcademico = "Senior Tactics Consultant",
                            Nome = "Izabella Johnson",
                            Sobrenome = "Romaguera"
                        },
                        new
                        {
                            Id = new Guid("af6a018b-e47b-4fe9-80d0-39696317aabc"),
                            GrauAcademico = "District Accountability Administrator",
                            Nome = "Lelah O'Kon",
                            Sobrenome = "Bartell"
                        },
                        new
                        {
                            Id = new Guid("910a3eee-7da8-4207-9643-2730e88aa4e5"),
                            GrauAcademico = "Regional Applications Assistant",
                            Nome = "Curt Lowe",
                            Sobrenome = "Emmerich"
                        },
                        new
                        {
                            Id = new Guid("1f36f829-4fba-45c3-9b66-991e3bca6270"),
                            GrauAcademico = "Internal Integration Director",
                            Nome = "Jaylon Konopelski",
                            Sobrenome = "Grady"
                        },
                        new
                        {
                            Id = new Guid("161e0839-1c66-4bb3-b0ad-4a576558cd72"),
                            GrauAcademico = "Dynamic Branding Officer",
                            Nome = "Hilton Grimes",
                            Sobrenome = "Roob"
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.Preco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<decimal>("PrecoAtual")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecoPromocional")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("precos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e936d68a-8109-436c-ad44-f29bfbc601ec"),
                            Nome = "Preco Padrao",
                            PrecoAtual = 10.0m,
                            PrecoPromocional = 8.0m
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.Qualificacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Aluno")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comentario")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Ponto")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("qualificacoes", (string)null);
                });

            modelBuilder.Entity("MasterNet.Persistence.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeCompleto")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Profissao")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "03559a60-c67f-40f9-9969-ec3010fb250c",
                            Name = "ADMIN",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "fb7d73c9-72b2-4a0a-ab60-0b8da3868827",
                            Name = "CLIENT",
                            NormalizedName = "CLIENT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "POLICIES",
                            ClaimValue = "CURSO_READ",
                            RoleId = "03559a60-c67f-40f9-9969-ec3010fb250c"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "POLICIES",
                            ClaimValue = "CURSO_UPDATE",
                            RoleId = "03559a60-c67f-40f9-9969-ec3010fb250c"
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "POLICIES",
                            ClaimValue = "CURSO_READ",
                            RoleId = "03559a60-c67f-40f9-9969-ec3010fb250c"
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "POLICIES",
                            ClaimValue = "CURSO_DELETE",
                            RoleId = "03559a60-c67f-40f9-9969-ec3010fb250c"
                        },
                        new
                        {
                            Id = 5,
                            ClaimType = "POLICIES",
                            ClaimValue = "INSTRUTOR_CREATE",
                            RoleId = "03559a60-c67f-40f9-9969-ec3010fb250c"
                        },
                        new
                        {
                            Id = 6,
                            ClaimType = "POLICIES",
                            ClaimValue = "INSTRUTOR_READ",
                            RoleId = "03559a60-c67f-40f9-9969-ec3010fb250c"
                        },
                        new
                        {
                            Id = 7,
                            ClaimType = "POLICIES",
                            ClaimValue = "INSTRUTOR_UPDATE",
                            RoleId = "03559a60-c67f-40f9-9969-ec3010fb250c"
                        },
                        new
                        {
                            Id = 8,
                            ClaimType = "POLICIES",
                            ClaimValue = "COMENTARIO_READ",
                            RoleId = "03559a60-c67f-40f9-9969-ec3010fb250c"
                        },
                        new
                        {
                            Id = 9,
                            ClaimType = "POLICIES",
                            ClaimValue = "COMENTARIO_DELETE",
                            RoleId = "03559a60-c67f-40f9-9969-ec3010fb250c"
                        },
                        new
                        {
                            Id = 10,
                            ClaimType = "POLICIES",
                            ClaimValue = "COMENTARIO_CREATE",
                            RoleId = "03559a60-c67f-40f9-9969-ec3010fb250c"
                        },
                        new
                        {
                            Id = 11,
                            ClaimType = "POLICIES",
                            ClaimValue = "CURSO_READ",
                            RoleId = "fb7d73c9-72b2-4a0a-ab60-0b8da3868827"
                        },
                        new
                        {
                            Id = 12,
                            ClaimType = "POLICIES",
                            ClaimValue = "INSTRUTOR_READ",
                            RoleId = "fb7d73c9-72b2-4a0a-ab60-0b8da3868827"
                        },
                        new
                        {
                            Id = 13,
                            ClaimType = "POLICIES",
                            ClaimValue = "COMENTARIO_READ",
                            RoleId = "fb7d73c9-72b2-4a0a-ab60-0b8da3868827"
                        },
                        new
                        {
                            Id = 14,
                            ClaimType = "POLICIES",
                            ClaimValue = "COMENTARIO_CREATE",
                            RoleId = "fb7d73c9-72b2-4a0a-ab60-0b8da3868827"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.CursoInstrutor", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("CursosInstrutores")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterNet.Domain.Instrutor", "Instrutor")
                        .WithMany("CursosInstrutores")
                        .HasForeignKey("IntrutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Instrutor");
                });

            modelBuilder.Entity("MasterNet.Domain.CursoPreco", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("CursosPrecos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterNet.Domain.Preco", "Preco")
                        .WithMany("CursosPrecos")
                        .HasForeignKey("PrecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Preco");
                });

            modelBuilder.Entity("MasterNet.Domain.Foto", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("Fotos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("MasterNet.Domain.Qualificacao", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("Qualificacao")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MasterNet.Persistence.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MasterNet.Persistence.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterNet.Persistence.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MasterNet.Persistence.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MasterNet.Domain.Curso", b =>
                {
                    b.Navigation("CursosInstrutores");

                    b.Navigation("CursosPrecos");

                    b.Navigation("Fotos");

                    b.Navigation("Qualificacao");
                });

            modelBuilder.Entity("MasterNet.Domain.Instrutor", b =>
                {
                    b.Navigation("CursosInstrutores");
                });

            modelBuilder.Entity("MasterNet.Domain.Preco", b =>
                {
                    b.Navigation("CursosPrecos");
                });
#pragma warning restore 612, 618
        }
    }
}
